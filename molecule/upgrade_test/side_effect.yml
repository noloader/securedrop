---

- name: Scrape build directory and stand-up local apt repository
  # want to gather facts for vagrant boxes in addition to localhost
  hosts: all
  tasks:
    - name: Run localhost tasks with host vars from both SD instances
      block:
        - name: Gather facts of just localhost
          setup:
          delegate_facts: True

        - name: Establish current IPv4 space of app server
          set_fact:
            app_network: "{{ hostvars['app-staging']['ansible_default_ipv4']['network'] }}"

        - name: Determine host interface the SD vagrant environment is running under
          set_fact:
            docker_attach_net: "{{ hostvars['localhost']['ansible_'+item|replace('-','_')] }}"
            docker_attach_parent: "{{ item }}"
          when: ((hostvars['localhost']['ansible_'+item|replace('-','_')]['ipv4'])|default({'network':'null'}) )['network'] == app_network
          with_items: "{{ hostvars['localhost'].ansible_interfaces }}"

        - name: Build docker apt creation repo
          docker_image:
            path: ../../devops/docker/AptCreate/
            name: "sd.local/reprepro:jessie"
            buildargs:
              UID: "{{ ansible_effective_user_id }}"

        - name: Create docker network, attach it to the same as the vagrant net
          docker_network:
            name: vagrant_link
            driver: macvlan
            ipam_options:
              subnet: "{{ (docker_attach_net.ipv4.network+'/'+docker_attach_net.ipv4.netmask )|ipaddr('net') }}"
              # This is not smart to always assume the gateway is .1 but likely
              # is correct on a standard vagrant/libvirt/virtualbox network setup
              gateway: "{{ docker_attach_net.ipv4.network|regex_replace('.0$','.1') }}"
            driver_options:
              parent: "{{ docker_attach_parent }}"

        - name: Start serving up some fresh hot debs
          docker_container:
            name: "sd-aptrepo"
            image: "sd.local/reprepro:jessie"
            state: started
            recreate: yes
            command: "bash /usr/local/bin/entry.sh python -m SimpleHTTPServer 8888"
            user: "{{ ansible_effective_user_id }}"
            volumes:
              - "{{ playbook_dir+'/../../build' }}:/dpkgs"
            env:
              REP_CODENAME: trusty
              REP_COMPONENTS: main
              REP_ARCH: i386 amd64
            network_mode: vagrant_link

      delegate_to: localhost
      run_once: yes
